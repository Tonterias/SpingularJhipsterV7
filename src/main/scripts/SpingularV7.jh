
// Monolithic Spingular V7

// ENTITIES:
entity Appuser {
    creationDate Instant required
    bio String maxlength(7500)
    facebook String maxlength(50)
    twitter String maxlength(50)
    linkedin String maxlength(50)
    instagram String maxlength(50)
    birthdate Instant
}

entity Blog {
    creationDate Instant required
    title String minlength(2) maxlength(100) required
    image ImageBlob
}
  
entity Post {
    creationDate Instant required
    publicationDate Instant
    headline String minlength(2) maxlength(100) required
    leadtext String minlength(2) maxlength(1000)
    bodytext String minlength(2) maxlength(65000) required
    quote String minlength(2) maxlength(1000)
    conclusion String minlength(2) maxlength(2000)
    linkText String minlength(2) maxlength(1000)
    linkURL String minlength(2) maxlength(1000)
    image ImageBlob
}

entity Topic {
    topicName String minlength(2) maxlength(40) required
}

entity Tag {
    tagName String minlength(2) maxlength(40) required
}

entity Comment {
    creationDate Instant required
    commentText String minlength(2) maxlength(65000) required
    isOffensive Boolean
}

entity Notification {
    creationDate Instant required
    notificationDate Instant
    notificationReason NotificationReason required
    notificationText String minlength(2) maxlength(100)
    isDelivered Boolean
}

entity Appphoto {
    creationDate Instant required
    image ImageBlob
}

entity Community {
    creationDate Instant required
    communityName String minlength(2) maxlength(100) required
    communityDescription String minlength(2) maxlength(7500) required
    image ImageBlob
    isActive Boolean
}

entity Follow {
    creationDate Instant
}

entity Blockuser {
    creationDate Instant
}

entity Interest {
    interestName String minlength(2) maxlength(40) required
}

entity Activity {
    activityName String minlength(2) maxlength(40) required
}

entity Celeb {
    celebName String minlength(2) maxlength(40) required
}

entity Cinterest {
    interestName String minlength(2) maxlength(40) required
}

entity Cactivity {
    activityName String minlength(2) maxlength(40) required
}

entity Cceleb {
    celebName String minlength(2) maxlength(40) required
}

entity Urllink {
    linkText String required
    linkURL String required
}

entity Frontpageconfig {
    creationDate Instant required
    topNews1 Long
    topNews2 Long
    topNews3 Long
    topNews4 Long 
    topNews5 Long
    latestNews1 Long
    latestNews2 Long
    latestNews3 Long
    latestNews4 Long
    latestNews5 Long
    breakingNews1 Long
    recentPosts1 Long
    recentPosts2 Long
    recentPosts3 Long
    recentPosts4 Long
    featuredArticles1 Long
    featuredArticles2 Long
    featuredArticles3 Long
    featuredArticles4 Long
    featuredArticles5 Long
    featuredArticles6 Long
    featuredArticles7 Long
    featuredArticles8 Long
    featuredArticles9 Long
    featuredArticles10 Long
    popularNews1 Long
    popularNews2 Long
    popularNews3 Long
    popularNews4 Long
    popularNews5 Long
    popularNews6 Long
    popularNews7 Long
    popularNews8 Long
    weeklyNews1 Long
    weeklyNews2 Long
    weeklyNews3 Long
    weeklyNews4 Long
    newsFeeds1 Long
    newsFeeds2 Long
    newsFeeds3 Long
    newsFeeds4 Long
    newsFeeds5 Long
    newsFeeds6 Long
    usefulLinks1 Long
    usefulLinks2 Long
    usefulLinks3 Long
    usefulLinks4 Long
    usefulLinks5 Long
    usefulLinks6 Long
    recentVideos1 Long
    recentVideos2 Long
    recentVideos3 Long
    recentVideos4 Long
    recentVideos5 Long
    recentVideos6 Long
}

entity Feedback {
    creationDate Instant required
    name String minlength(2) maxlength(100) required
    email String required
    feedback String minlength(2) maxlength(5000) required
}

entity ConfigVariables {
    configVarLong1 Long
    configVarLong2 Long
    configVarLong3 Long
    configVarLong4 Long
    configVarLong5 Long
    configVarLong6 Long
    configVarLong7 Long
    configVarLong8 Long
    configVarLong9 Long
    configVarLong10 Long
    configVarLong11 Long
    configVarLong12 Long
    configVarLong13 Long
    configVarLong14 Long
    configVarLong15 Long
    configVarBoolean16 Boolean
    configVarBoolean17 Boolean
    configVarBoolean18 Boolean
    configVarString19 String
    configVarString20 String
}

enum NotificationReason {
    FOLLOWING, UNFOLLOWING, PROPOSAL_RELEASED, FOLLOWER_STATUS, AUTHORIZE_COMMUNITY_FOLLOWER, UNAUTHORIZE_COMMUNITY_FOLLOWER
}

// RELATIONSHIPS:
relationship OneToOne {
    Appuser{user(id) required} to User{appuser(id)}
    Appphoto{appuser(id) required} to Appuser{appphoto(id)}
}

relationship OneToMany {
    Appuser{blog(title)} to Blog{appuser(id) required}
    Appuser{community} to Community{appuser(id) required}
    Appuser{notification} to Notification{appuser(id) required}
    Appuser{comment} to Comment{appuser(id) required} 
    Appuser{post} to Post{appuser(id) required}
    Appuser{followed(id)} to Follow{followed(id)}
    Appuser{following(id)} to Follow{following(id)}
    Appuser{blockeduser(id)} to Blockuser{blockeduser(id)}
    Appuser{blockinguser(id)} to Blockuser{blockinguser(id)}    
    Blog{post(id)} to Post{blog(title) required}
    Post{comment(id)} to Comment{post(id) required}
    Community{blog(id)} to Blog{community(communityName)}
    Community{cfollowed(id)} to Follow{cfollowed(id)}
    Community{cfollowing(id)} to Follow{cfollowing(id)}
    Community{cblockeduser(id)} to Blockuser{cblockeduser(id)}
    Community{cblockinguser(id)} to Blockuser{cblockinguser(id)}
}

relationship ManyToMany {
    Tag{post(headline)} to Post{tag(tagName)}
    Topic{post(headline)} to Post{topic(topicName)}
    Cinterest{community(id)} to Community{cinterest(interestName)}
    Cactivity{community(id)} to Community{cactivity(activityName)}
    Cceleb{community(id)} to Community{cceleb(celebName)}
    Interest{appuser(id)} to Appuser{interest(interestName)}
    Activity{appuser(id)} to Appuser{activity(activityName)}
    Celeb{appuser(id)} to Appuser{celeb(celebName)}
}

// SET PAGINATION OPTIONS:
paginate all with pagination
// paginate ChatMessage with infinite-scroll
// paginate all with infinite-scroll

// SET SERVICE OPTIONS:
service all with serviceImpl
//service all with serviceClass

// DTO:
dto all with mapstruct

// FILTERING:
filter *